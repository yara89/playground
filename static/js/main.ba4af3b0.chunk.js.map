{"version":3,"sources":["Calculator/Calculator/Calculator.module.css","App.module.css","Calculator/Display/Display.module.css","Calculator/Button/Button.module.css","Clock/Clock.jsx","Counter/Counter.jsx","ClassTopics/ClassTopics.jsx","Calculator/Display/Display.js","Calculator/Button/Button.js","Calculator/Calculator/Calculator.js","TicTacToe/TicTacToe.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","refreshHandler","console","log","setState","date","Date","state","this","timerID","setInterval","tick","clearInterval","toLocaleTimeString","React","Component","Counter","decrement","count","reset","increment","bind","className","onClick","ClassTopics","id","Display","classes","Output","children","Button","type","name","e","target","Calculator","input1","input2","operator","result","setInput","value","indexOf","prev","concat","setOperator","calculate","Number","output","CalculatorBody","Keypad","KeypadRow","Square","Board","i","squares","renderSquare","Game","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById","App","isClassTopicsVisible","isClockVisible","isCounterVisible","isCalculatorVisible","isTicTacToeVisible","menubutton","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba4af3b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalculatorBody\":\"Calculator_CalculatorBody__3GOGi\",\"Keypad\":\"Calculator_Keypad__3u5sz\",\"KeypadRow\":\"Calculator_KeypadRow__1Ue3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"menubutton\":\"App_menubutton__3apdH\",\"Button\":\"App_Button__3SFOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__3iHrE\",\"Output\":\"Display_Output__2sGbc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3MyCA\"};","import React from 'react';\n\n//function Clock () {\n //   const  date: new Date(),\n//}\n\n//class component\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            date: new Date(),\n        };\n        console.log ('constructor')\n    }\n\n    componentDidMount() { \n        console.log ('component did mount')\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n          );      \n    }\n  \n    componentWillUnmount() {\n        console.log ('component will unmount')\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        console.log ('tick')\n        this.setState({\n            date: new Date ()\n\n        });\n    }\n    refreshHandler = () => {\n        console.log ('refresh handler')\n\n        this.setState({ date:new Date() });\n    };\n\n    render() {\n             console.log ('render')\n return (\n        <div>\n                  <br />\n\n                  <br />\n\n          <h1>hey, world!</h1>\n          <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n          {/* <button onClick={this.refreshHandler}> Refresh</button> */}\n        </div>\n      );\n    }\n  }\n  \n export default Clock;\n\n  ","import React from \"react\";\nimport './Counter.css'\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n\n    this.increment = this.increment.bind(this);\n  }\n  increment() {\n    // this.setState((prevState) => ({\n    //   count: prevState.count + 1,\n    // }));\n\n    this.setState({\n      count: this.state.count + 1,\n    });\n  }\n  decrement = () => {\n    // this.setState((prevState) => ({\n    //   count: prevState.count - 1,\n    // }));\n\n    this.setState({\n      count: this.state.count - 1,\n    });\n  };\n  reset = () => {\n    this.setState({ count: 0 });\n  };\n  render() {\n    return (\n      <div className=\"wrap\">\n      <main className=\"container\">\n        <div className=\"box\">\n\n         <br />\n      <br />\n\n\n        <span>Counter:   {this.state.count} </span>\n        <button className=\"resetBtn\" onClick={this.reset}> Reset </button>\n        <button className=\"btn\" onClick={this.increment}> + </button>\n        <button className=\"btn\" onClick={this.decrement}> - </button>\n      </div>\n        </main>\n      </div>\n\n    );\n  }\n}\n\nexport default Counter;\n","import React from \"react\";\nimport './ClassTopics.css';\n\nconst ClassTopics = () => {\n  return (\n    <div id=\"classTopics\">\n      <br />\n      JavaScript\n      <ul>\n        <li>Arrow Functions</li>\n        <li> vanilla + ES6 </li>\n        <li> Arrays </li>\n        <li>Classes</li>\n      </ul>\n      React\n      <ul>\n        <li>JSX</li>\n        <li>Components + Props</li>\n        <li>Render</li>\n        <li>State + LifeCycles</li>\n\n\n\n      </ul>\n    </div>\n  );\n};\n\nexport default ClassTopics;\n","import React from 'react';\nimport classes from './Display.module.css';\n\nconst Display = props => (\n\n  <div className={classes.Display}>\n    <p className={classes.Output}>{props.children}</p>\n  </div>\n);\n\nexport default Display;\n\n // if (this.state.input1) {\n //   if (!this.state.operator) {\n  //    let twoDigitInput = this.state.input1.toString().concat(value);\n //     this.setState({ input1: Number(twoDigitInput) });\n //   }\n //   this.setState({ input2: Number(value) });\n // } else {\n//    this.setState({ input1: Number(value) });\n//  }\n\n // this.displayInput(value);\n\n//};","import React from 'react';\nimport classes from './Button.module.css';\n\nconst Button = props => {\n  return (\n    <button\n      type=\"button\"\n      className={classes.Button}\n      name={props.name}\n      onClick={(e) => props.onClick(e.target.name)}>{props.children}</button>\n  )\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport classes from './Calculator.module.css';\nimport Display from '../Display/Display';\nimport Button from '../Button/Button';\n\nclass Calculator extends Component {\n  state = {\n    input1: null,\n    input2: null,\n    operator: null,\n    result: null,\n  };\n\n  setInput = value => {\n    if (this.state.operator) {\n      if (!this.state.input2) {\n        if (value === \".\") {\n          this.setState({ input2: 0 + value });\n        } else {\n          this.setState({ input2: value });\n        }\n      } else if (value !== \".\" || (this.state.input2.indexOf(\".\") === -1)) {\n        this.setState(prev => ({ input2: prev.input2.concat(value) }));\n      }\n    } else {\n      if (!this.state.input1) {\n        /*\n        if (this.state.result !== null) {\n          this.setState({ result: null });\n        }\n        */\n        if (value === \".\") {\n          this.setState({ input1: 0 + value });\n        } else {\n          this.setState({ input1: value });\n        }\n      } else if (value !== \".\" || (this.state.input1.indexOf(\".\") === -1)) {\n        this.setState(prev => ({ input1: prev.input1.concat(value) }));\n      }\n    }\n  };\n\n  setOperator = value => {\n    if (!this.state.operator) {\n      this.setState({ operator: value });\n    }\n  };\n  reset = () => {\n    this.setState({\n      input1: null,\n      input2: null,\n      operator: null,\n      result: null,\n    });\n  };\n\n  // backspace = () => {\n  //   if (this.state.input) {\n  //     this.setState(prev => ({ input2: prev.input2.slice(0, -1) }));\n  //   } else if (this.state.operator) {\n  //     this.setState({ operator: null });\n  //   } else if (this.state.input1) {\n  //     this.setState(prev => ({ input1: prev.input1.slice(0, -1) }));\n  //   }\n  // };\n\n  calculate = () => {\n    if (this.state.input1 && this.state.operator && this.state.input2) {\n      let result = 0;\n      switch (this.state.operator) {\n        case \"+\":\n          result = Number(this.state.input1) + Number(this.state.input2);\n          break;\n        case \"-\":\n          result = Number(this.state.input1) - Number(this.state.input2);\n          break;\n        case \"*\":\n          result = Number(this.state.input1) * Number(this.state.input2);\n          break;\n        case \"/\":\n          if (this.state.input2 !== 0) {\n            result = Number(this.state.input1) / Number(this.state.input2);\n          }\n          break;\n        default:\n          this.setState({ result });\n          break;\n      }\n      this.setState({ result: result });\n    }\n  };\n\n  render() {\n    let output = 0;\n    if (this.state.result) {\n      output = this.state.result;\n    } else if (this.state.input2) {\n      output = this.state.input2;\n    } else if (this.state.operator) {\n      output = this.state.operator;\n    } else if (this.state.input1) {\n      output = this.state.input1;\n    }\n    return (\n      \n      <div className={classes.CalculatorBody}>\n      <br />\n\n        <Display>{output}</Display>\n\n        <div className={classes.Keypad}>\n          <div className={classes.KeypadRow}>\n            <Button\n              name=\"1\"\n              onClick={this.setInput}>1</Button>\n            <Button\n              name=\"2\"\n              onClick={this.setInput}>2</Button>\n            <Button\n              name=\"3\"\n              onClick={this.setInput}>3</Button>\n            <Button\n              name=\"+\"\n              onClick={this.setOperator}>+</Button></div>\n          <div className={classes.KeypadRow}>\n            <Button\n              name=\"4\"\n              onClick={this.setInput}>4</Button>\n            <Button\n              name=\"5\"\n              onClick={this.setInput}>5</Button>\n            <Button\n              name=\"6\"\n              onClick={this.setInput}>6</Button>\n            <Button\n              name=\"-\"\n              onClick={this.setOperator}>-</Button></div>\n          <div className={classes.KeypadRow}>\n            <Button\n              name=\"7\"\n              onClick={this.setInput}>7</Button>\n            <Button\n              name=\"8\"\n              onClick={this.setInput}>8</Button>\n            <Button\n              name=\"9\"\n              onClick={this.setInput}>9</Button>\n            <Button\n              name=\"*\"\n              onClick={this.setOperator}>*</Button>\n          </div>\n          <div className={classes.KeypadRow}>\n            <Button\n              name=\"reset\"\n              onClick={this.reset}>C</Button>\n\n            <Button\n              name=\"0\"\n              onClick={this.setInput}>0</Button>\n            <Button\n              name=\".\"\n              onClick={this.setInput}>.</Button>\n\n            <Button\n              name=\"/\"\n              onClick={this.setOperator}>/</Button>\n          </div>\n\n          <div className={classes.KeypadRow}>\n\n            <Button\n              name=\"calculate\"\n              onClick={this.calculate}>=</Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Calculator;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tictactoe.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n            <Square value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n            />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n    history: history.concat([{\n      squares: squares\n    }]),\n    stepNumber: history.length,\n    xIsNext: !this.state.xIsNext,\n   });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    // return to previous moves from saved game history\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    // player status, winner is?\n    let status;\n    if (winner) {\n      status = 'the Winner is: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n           />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// ========================================\n\nReactDOM.render(\n  \n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n","import React from \"react\";\nimport classes from './App.module.css';\nimport Clock from \"./Clock/Clock\";\nimport Counter from \"./Counter/Counter\";\nimport ClassTopics from \"./ClassTopics/ClassTopics\";\nimport Calculator from \"./Calculator/Calculator/Calculator\";\nimport Game from \"./TicTacToe/TicTacToe\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isClassTopicsVisible: false,\n      isClockVisible: false,\n      isCounterVisible: false,\n      isCalculatorVisible: false,\n      isTicTacToeVisible: false,\n\n    };\n  }\n\n  render() {\n    return (\n      <div className={classes.App}>\n       \n       <button\n                  type=\"button\"\n                  className={classes.menubutton}\n          onClick={() => {\n            this.setState({\n              isClassTopicsVisible: false,\n              isClockVisible: false,\n              isCounterVisible: false,\n              isCalculatorVisible: true,\n              isTicTacToeVisible: false,\n\n            });\n          }}\n        >\n          Use Calculator\n       </button>\n\n       <button\n                  type=\"button\"\n                  className={classes.menubutton}\n          onClick={() => {\n            this.setState({\n              isClassTopicsVisible: false,\n              isClockVisible: false,\n              isCounterVisible: false,\n              isCalculatorVisible: false,\n              isTicTacToeVisible: true,\n\n            });\n          }}\n        >\n          Play Tic Tac Toe \n         </button>\n\n        <button\n          type=\"button\"\n          className={classes.menubutton}\n          onClick={() => {\n            this.setState({\n              isClassTopicsVisible: false,\n              isClockVisible: true,\n              isCounterVisible: false,\n              isCalculatorVisible: false,\n              isTicTacToeVisible: false,\n\n            });\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n                  type=\"button\"\n                  className={classes.menubutton}\n          onClick={() => {\n            this.setState({\n              isClassTopicsVisible: false,\n              isClockVisible: false,\n              isCounterVisible: true,\n              isCalculatorVisible: false,\n              isTicTacToeVisible: false,\n\n            });\n          }}\n        >\n          Show Counter\n        </button>\n        <button\n          type=\"button\"\n          className={classes.menubutton}\n          onClick={() => {\n            this.setState({\n              isClassTopicsVisible: true,\n              isClockVisible: false,\n              isCounterVisible: false,\n              isCalculatorVisible: false,\n              isTicTacToeVisible: false,\n\n            });\n          }}\n        >\n          Show Class Topics\n        </button>\n        \n        {/* <button>TODO: Show Comment</button>           */}\n\n       \n\n        \n\n        {/* Conditional rendering: https://reactjs.org/docs/conditional-rendering.html */}\n        {this.state.isClassTopicsVisible && <ClassTopics />}\n        {this.state.isClockVisible && <Clock />}\n        {this.state.isCounterVisible && <Counter />}\n        {this.state.isCalculatorVisible && <Calculator />}\n        {this.state.isTicTacToeVisible  &&  <Game />},\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n//import tick from \"./SimpleClock/tick\"\n//setInterval(tick, 1000);\n\n//import Clock from './Clock/Clock'\n\nimport * as serviceWorker from './serviceWorker';\n\n//function tick() {\n// ReactDOM.render(\n//  <Clock date={new Date()} />,\n//   document.getElementById('root')\n// );\n//}\n\n//setInterval(tick, 1000);\n// ReactDOM.render(\n//   <Clock date={new Date()} />,\n//  document.getElementById('root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}